
//*******************************************************************
// VOWELS
//*******************************************************************


phoneme 3
  CALL @
  ipa ə
endphoneme

phoneme @    //  Schwa
  vwl   starttype #@  endtype #@
  unstressed
  length 140
  IfNextVowelAppend(r-)
  IF thisPh(isWordEnd) THEN
    FMT(vowel/@_6)
  ENDIF
  FMT(vowel/@_4)
endphoneme


phoneme @2   //  Schwa, changes to I before a vowel
  vwl  starttype #@  endtype #@
  unstressed
  length 120
  IF nextPh(isVowel) THEN
    ChangePhoneme(I2)
  ENDIF
  FMT(vowel/@_low)
endphoneme


phoneme a
  vwl  starttype #a  endtype #a
  ipa æ
  length 160
  ChangeIfDiminished(a#)
  FMT(vowel/&)
endphoneme


phoneme aa   //   'bath' etc.
  vwl  starttype #a  endtype #a
  ipa a:
  length 200
  FMT(vowel/a_5)
endphoneme

phoneme a#
  vwl  starttype #@  endtype #@
  ipa ɐ
  unstressed
  length 150

  IF thisPh(isStressed) THEN
    ChangePhoneme(a)
  ENDIF

  IF nextPhW(r) THEN
    ChangePhoneme(3)
  ENDIF

  FMT(vowel/a#_2)
endphoneme


phoneme E
  vwl  starttype #e  endtype #e
  length 140
  IF nextPhW(n) THEN
    ChangeIfDiminished(@)
  ELSE
    ChangeIfDiminished(I2)
  ENDIF
  FMT(vowel/e_mid)
endphoneme


phoneme I
  vwl  starttype #i  endtype #i
  length 130
  IfNextVowelAppend(;)
  FMT(vowel/ii_3)
endphoneme


phoneme I2
  vwl  starttype #i  endtype #i
  unstressed
  length 130
  IfNextVowelAppend(;)
  FMT(vowel/ii_6)
endphoneme


phoneme I#
  vwl  starttype #i  endtype #i
  unstressed
  length 130
  ipa ᵻ
  FMT(vowel/ii#)
endphoneme


phoneme I2#
  vwl  starttype #i  endtype #i
  unstressed
  ChangePhoneme(I#)
endphoneme


phoneme 0
  vwl  starttype #o   endtype #o
  length 140
  ChangeIfDiminished(@)
  FMT(vowel/0)
endphoneme


phoneme 02   // becomes V in en-us
  vwl  starttype #o  endtype #o
  length 140
  ChangePhoneme(V)
endphoneme


phoneme V
  vwl  starttype #a  endtype #@
  length 140
  IF prevPh(w) THEN
    FMT(vowel/V_4)
  ENDIF
  FMT(vowel/V_3)
endphoneme


phoneme U
  vwl  starttype #u  endtype #u
  length 150
  FMT(vowel/uu_bck)
endphoneme


phoneme A:
  vwl  starttype #a  endtype #a
  ipa ɑː
  length 230
  FMT(vwl_hi/aa_9)
endphoneme


phoneme A@
  vwl  starttype #a  endtype #a
  length 230
  IfNextVowelAppend(r-)
  FMT(vowelr/aa_r)
endphoneme


phoneme 3:
  vwl  starttype #@  endtype #@
  length 210
  IfNextVowelAppend(r-)
  ChangeIfDiminished(3)
  FMT(vowelr/V3_r)
endphoneme


phoneme i:
  vwl  starttype #i  endtype #i
  length 180
  IfNextVowelAppend(;)
  FMT(vowel/i_fnt)
endphoneme


phoneme O:
  vwl  starttype #o  endtype #o
  length 230
  FMT(vowel/oo_4)
endphoneme


phoneme O@
  vwl  starttype #o  endtype #@
  length 200
  ipa ɔː
  IfNextVowelAppend(r)
  FMT(vowel/oo_en)
endphoneme


phoneme o@
  vwl  starttype #o  endtype #@
  length 250
  ipa ɔː
  IfNextVowelAppend(r)
  FMT(vowel/oo_en)
endphoneme


phoneme O
  vwl  starttype #o  endtype #o
  length 200
  FMT(vowel/0)
endphoneme


phoneme u:
  vwl  starttype #u  endtype #u
  length 210

  IF prevPhW(j)  AND NOT thisPh(isWordEnd) THEN
    length 160
  ENDIF

  FMT(vdiph2/uw_6)
endphoneme


phoneme aU
  vwl starttype #a endtype #u
  length 230
  FMT(vdiph/aau_3)
endphoneme


phoneme oU
  vwl  starttype #@  endtype #u
  length 220
  FMT(vdiph/8u)
endphoneme


phoneme aI
  vwl  starttype #a  endtype #i
  length 240
  IF nextPh(#a) OR nextPh(#o) THEN
    AppendPhoneme(;)
  ENDIF
  FMT(vdiph/aai)
endphoneme


phoneme eI
  vwl  starttype #e  endtype #i
  length 210
  FMT(vdiph/ei)
endphoneme


phoneme OI
  vwl  starttype #o  endtype #i
  length 230
  FMT(vdiph/0i_2)
endphoneme

phoneme e@
  vwl  starttype #e  endtype #@
  length 230
  IfNextVowelAppend(r-)
  FMT(vowel/e_mid2)
endphoneme

phoneme i
  vwl  starttype #i  endtype #i
  unstressed
  ipa i
  length 150
  IfNextVowelAppend(;)

  IF NOT thisPh(isFinalVowel) THEN
    length 130
    FMT(vowel/ii_4)
  ENDIF

  FMT(vowel/ii_final)
endphoneme


phoneme i@
  vwl  starttype #i  endtype #@
  length 250
  FMT(vdiph2/ii@)  // don't append [r] before a vowel
endphoneme

phoneme i@3
  vwl  starttype #i  endtype #@
  length 250

  IF MbrolaSynth THEN
    ChangePhoneme(i@)
  ENDIF

  IfNextVowelAppend(r-)
  FMT(vdiph2/ii@)
endphoneme

phoneme aI@
  vwl  starttype #a  endtype #@
  length 280
  ipa aɪə
  IfNextVowelAppend(r-)
  FMT(vwl_en/ai@)
endphoneme


phoneme aI3
  vwl  starttype #a  endtype #@
  length 280
  ChangePhoneme(aI@)
endphoneme

phoneme aU@ // h**our**
  vwl  starttype #a   endtype #@
  length 280
  IfNextVowelAppend(r-)
  FMT(vwl_en/aU@)
endphoneme


//==============
// Consonants
//==============

phoneme h
  vls glt apr
  lengthmod 3
  ipa h

  IF nextPh(j) THEN
    ChangePhoneme(NULL) // drop "h" for "human", "huge", etc.
  ELIF nextPh(#@) THEN
    WAV(h/h@)
  ELIF nextPh(#a) THEN
    WAV(h/ha)
  ELIF nextPh(#e) THEN
    WAV(h/he)
  ELIF nextPh(#i) THEN
    WAV(h/hi)
  ELIF nextPh(#o) THEN
    WAV(h/ho)
  ELIF nextPh(#u) THEN
    WAV(h/hu)
  ENDIF
  WAV(h/h_, 70)  // no vowel following
endphoneme


phoneme r
  CALL base1/r.
endphoneme

phoneme k
  CALL base2/k
endphoneme

phoneme p
  CALL base2/p
endphoneme


phoneme t
  vls alv stp
  voicingswitch d
  lengthmod 2
  Vowelin f1=0  f2=1700 -300 300  f3=-100 80
  Vowelout f1=0 f2=1700 -300 250  f3=-100 80  rms=20

  IF nextPhW(isVowel) AND nextPh(isUnstressed) THEN
    IF NOT next2PhW(n) OR nextPhW(3:) THEN
      IF prevPhW(isVowel) THEN
        ChangePhoneme(t#)
      ELIF prevPhW(n) THEN
        WAV(ustop/t_hi, 60)
      ENDIF
    ENDIF
  ENDIF

  IF nextPh(isPause2) THEN
    WAV(ustop/t_dnt)
  ELIF nextPh(r) OR nextPh(R) OR nextPh(R2) THEN
    WAV(ustop/tr)
  ELIF nextPh(@-) THEN
    WAV(ustop/t_hi, 50)
  ENDIF
  WAV(ustop/t_hi, 90)
endphoneme

phoneme d
  CALL d[
endphoneme

    
phoneme t#        // reduced [t] as in "city" in en-us
  vls dnt stp
  lengthmod 2
  voicingswitch d
  Vowelin f1=0  f2=1500 -300 300  f3=-100 80  amp=16
  Vowelout f1=0 f2=1500 -300 250  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/t_short_, 35)
  ENDIF
  WAV(ustop/t_short, 50)
endphoneme


phoneme t2        // [t] which doesn't reduce
  vls dnt stp
  lengthmod 2
  voicingswitch d
  Vowelin f1=0  f2=1500 -300 300  f3=-100 80  amp=16
  Vowelout f1=0 f2=1500 -300 250  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/t_short_, 35)
  ENDIF
  WAV(ustop/t_short, 50)
endphoneme

