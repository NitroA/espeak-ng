//=======================================
// Romani
//=======================================


// Vowels

phoneme a
  vwl starttype #a endtype #a
  ipa a
  length 150
  FMT(vowel/a_2)
endphoneme

phoneme e
  vwl starttype #e endtype #e
  ipa e
  length 150
  FMT(vowel/e_mid2)
endphoneme

phoneme i
  vwl starttype #i endtype #i
  ipa i
  length 150
  IfNextVowelAppend(;)
  FMT(vowel/i)
endphoneme

phoneme o
  vwl starttype #o endtype #o
  ipa o
  length 150
  FMT(vowel/o_mid)
endphoneme

phoneme u
  vwl starttype #u endtype #u
  length 150
  FMT(vowel/u_bck)
endphoneme


// Consonants

phoneme r
  import_phoneme base1/R
endphoneme

phoneme t         // revert to alveolar /t/
  vls alv stp
  lengthmod 2
  voicingswitch d
  Vowelin f1=1  f2=1600 -300 300  f3=-100 80  amp=11
  Vowelout f1=0 f2=1600 -300 250  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/t_unasp2, 35)
  ENDIF
  WAV(ustop/t_unasp2, 50)
endphoneme

phoneme t#
  vls alv stp
  lengthmod 2
  voicingswitch d
  Vowelin f1=0  f2=1500 -300 300  f3=-100 80  amp=16
  Vowelout f1=0 f2=1500 -300 250  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/t_, 35)
  ENDIF
  WAV(ustop/t, 50)
endphoneme

phoneme tS#
  vls pla afr sib
  voicingswitch dZ
  lengthmod 2
  Vowelin f1=0  f2=1800 -200 200  f3=-100 80 gpaus

  IF nextPh(isPause2) THEN
    WAV(ustop/tsh_asp, 80)
  ENDIF
  WAV(ustop/tsh_asp, 80)
endphoneme

phoneme dz
  import_phoneme consonants/dz
endphoneme

phoneme ts
  import_phoneme consonants/ts
endphoneme

phoneme ph
  import_phoneme consonants/ph
endphoneme

phoneme k#
  import_phoneme consonants/k#
endphoneme