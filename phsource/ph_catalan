
//====================================================
//  Catalan  - based on Spanish and Base2
//====================================================

phoneme a
  vwl starttype #a endtype #a
  length 180
  ChangeIfUnstressed(a#)
  FMT(vowel/a_6)
endphoneme

phoneme a#
  vwl starttype #@ endtype #@
  ipa ɐ
  unstressed
  length 170
  FMT(vowel/a#_3)
endphoneme

phoneme e
  vwl starttype #e endtype #e
  length 170
  ChangeIfUnstressed(@)
  FMT(vowel/e)
endphoneme

phoneme E
  vwl starttype #e endtype #e
  length 180
  ChangeIfUnstressed(@)
  FMT(vowel/e_mid)
endphoneme

phoneme E2    // don't reduce
  vwl starttype #e endtype #e
  length 180
  FMT(vowel/e_mid)
endphoneme

phoneme O
  vwl starttype #o endtype #o
  length 170
  ChangeIfUnstressed(U)
  FMT(vowel/oo)
endphoneme

phoneme o
  vwl starttype #o endtype #o
  length 170
  ChangeIfUnstressed(U)
  FMT(vowel/o)
endphoneme

phoneme U
  vwl starttype #u endtype #u
  unstressed
  length 160
  FMT(vowel/uu_2)
endphoneme

phoneme u
  vwl starttype #u endtype #u
  length 160
  ChangeIfUnstressed(U)
  FMT(vowel/u_bck)
endphoneme

phoneme M
  vls lbd nas
  ipa ɱ
endphoneme

phoneme m
  vcd blb nas
  Vowelout f1=2  f2=1000 -500 -350  f3=-200 80 brk
  lengthmod 4

  IF KlattSynth THEN
    Vowelin  f1=0  f2=1000 -50 -200  f3=-200 80
    IF nextPh(isPause2) THEN
      FMT(klatt/m_)
    ENDIF
    FMT(klatt/m)
  ENDIF

  NextVowelStarts
    VowelStart(m/m@)
    VowelStart(m/ma)
    VowelStart(m/me)
    VowelStart(m/mi)
    VowelStart(m/mo)
    VowelStart(m/mu)
  EndSwitch
  
  IF nextPh(f) THEN
    ChangePhoneme(M)
  ENDIF

  IF prevPh(isNotVowel) AND nextPhW(isLiquid) THEN
    FMT(m/mj)
  ELIF prevPh(isPause) THEN
    FMT(m/_m)
  ELIF nextPh(isNotVowel) THEN
    FMT(m/m_)
  ENDIF
endphoneme


phoneme n
  vcd alv nas
  Vowelout f1=2 f2=1500 -300 250  f3=-100 80  rms=20 brk
  lengthmod 4

  IF KlattSynth THEN
    Vowelin f1=0 f2=1500 -200 200 f3=0 80
    FMT(klatt/n)
  ENDIF

  NextVowelStarts
    VowelStart(n/n@)
    VowelStart(n/na)
    VowelStart(n/ne)
    VowelStart(n/ni)
    VowelStart(n/no)
    VowelStart(n/nu)
  EndSwitch
  
  IF nextPh(f) THEN
    ChangePhoneme(M)
  ENDIF

  IF prevPh(isNotVowel) AND nextPhW(isLiquid) THEN
    FMT(n/nj)
  ELIF prevPh(isPause) OR prevPh(n) THEN
    FMT(n/_n)
  ELIF nextPh(isNotVowel) THEN
    FMT(n/n_)
  ENDIF
endphoneme

phoneme l
  import_phoneme en/l   // use 'dark' [l] after a vowel
endphoneme



