
//====================================================
//  Catalan valencian - based on Catalan (and Spanish and Base2)
//====================================================

// vowels 
//=============

phoneme a
  vwl starttype #a endtype #a
  length 180
  FMT(vowel/a_6)
endphoneme

phoneme a2 // a que no es neutralitza
  vwl starttype #a endtype #a
  length 180
  FMT(vowel/a_6)
endphoneme

phoneme e
  vwl starttype #e endtype #e
  length 170
  
  IF thisPh(isWordStart) THEN
    IF nextPh(s) OR nextPh(n) AND thisPh(isUnstressed)THEN
        ChangePhoneme(a)
    ENDIF
  ENDIF
  FMT(vowel/e)
endphoneme

phoneme e2 // don't reduce + change if tressed: "aeri" vs "aer√≤drom".
  vwl starttype #e endtype #e
  length 170
  FMT(vowel/e)
endphoneme

phoneme E
  vwl starttype #e endtype #e

  length 180
  IF thisPh(isUnstressed) THEN
    IF thisPh(isWordStart) AND nextPh(s) OR thisPh(isWordStart) AND nextPh(n) THEN
        ChangePhoneme(a)
    ELSE
        ChangePhoneme(e)
    ENDIF
  ENDIF

  FMT(vowel/e_mid)
endphoneme

phoneme E2    // don't reduce
  vwl starttype #e endtype #e
  length 180
  ChangeIfUnstressed(e2)
  FMT(vowel/e_mid)
endphoneme

phoneme O
  vwl starttype #o endtype #o
  length 170
  IF thisPh(isUnstressed) THEN
    ChangePhoneme(o)
  ENDIF
  FMT(vowel/oo)
endphoneme

phoneme o2
  vwl starttype #o endtype #o
  length 170
  ChangeIfStressed(O)
  FMT(vowel/o)
endphoneme

phoneme o
  vwl starttype #o endtype #o
  length 170
  FMT(vowel/o)
endphoneme

phoneme u
  vwl starttype #u endtype #u
  length 160
  FMT(vowel/u_bck)
endphoneme

phoneme i
  vwl starttype #i endtype #i
  length 170
  IF thisPh(isUnstressed) AND nextPh(isVowel) AND nextPh(isUnstressed) THEN
    IF thisPh(isWordEnd) THEN
    ELSE
      ChangePhoneme(j)
    ENDIF
  ENDIF
  FMT(vowel/i)
endphoneme

// nasals
//==============

phoneme n
  vcd alv nas
  Vowelout f1=2 f2=1500 -300 250  f3=-100 80  rms=20 brk
  lengthmod 4

  IF KlattSynth THEN
    Vowelin f1=0 f2=1500 -200 200 f3=0 80
    FMT(klatt/n)
  ENDIF

  NextVowelStarts
    VowelStart(n/n@)
    VowelStart(n/na)
    VowelStart(n/ne)
    VowelStart(n/ni)
    VowelStart(n/no)
    VowelStart(n/nu)
  EndSwitch
  
  IF nextPh(f) OR nextPh(v) THEN
    ChangePhoneme(M)
  ELIF nextPh(k) OR nextPh(g) THEN
      ChangePhoneme(N)
  ELIF nextPh(p) OR nextPh(b) OR nextPh(m) THEN
      ChangePhoneme(m)
//  ELIF nextPh(S) OR nextPh(Z) THEN
  //    ChangePhoneme(n^)
    
  ENDIF

  IF prevPh(isNotVowel) AND nextPhW(isLiquid) THEN
    FMT(n/nj)
  ELIF prevPh(isPause) OR prevPh(n) THEN
    FMT(n/_n)
  ELIF nextPh(isNotVowel) THEN
    FMT(n/n_)
  ENDIF
endphoneme

// R
//=====================
phoneme R
  liquid trl
  lengthmod 6
  ipa r
  IF thisPh(isWordEnd) THEN
    ChangePhoneme(**)
  ELIF nextPh(isWordEnd) AND nextPh(s) THEN
    ChangePhoneme(**)
  ENDIF
  Vowelin  f1=0  f2=1600 -300 300  f3=-200 80
  Vowelout f1=2  f2=1600 -300 300  f3=-200 80 brk
  FMT(r3/r_trill2) addWav(r3/r_trill2.wav, 65)
endphoneme

//================ apitxats

phoneme Z // plea**s**ure
  vcd pla frc sib
  voicingswitch S
  lengthmod 6
  Vowelin  f1=0  f2=2000 0 300  f3=-200 80
  Vowelout f1=2  f2=2000 0 300  f3=-200 80 brk

  ChangePhoneme(dZ)
endphoneme

phoneme S // **sh**op
  vls pla frc sib
  voicingswitch Z
  lengthmod 3
  Vowelin  f1=0  f2=2100 100 300  f3=-100 80
  Vowelout f1=0  f2=2100 100 300  f3=-100 80

  IF prevPh(i) OR prevPh(j) THEN
    IF thisPh(isWordEnd) AND nextPh(isVoiced) THEN
        ChangePhoneme(Z)
    ENDIF
  ELSE
    ChangePhoneme(tS)
  ENDIF
  WAV(ufric/sh)
endphoneme
